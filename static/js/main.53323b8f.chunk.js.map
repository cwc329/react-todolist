{"version":3,"sources":["components/Form.js","components/Todos.js","App.js","reportWebVitals.js","index.js"],"names":["FormStyle","styled","form","Form","handlers","inputsContent","onSubmit","addTodo","type","name","onChange","inputChange","value","TodoCard","div","props","isCompleted","Button","button","Todos","StyleContext","todo","className","data-id","id","isEditing","editInputChange","defaultValue","content","onClick","cancelEditing","changeTodo","changeStatus","editBtnClick","deleteTodo","AppWrapper","TodosWrapper","App","useState","todos","setTodos","editingContent","inputs","setInputs","filter","setFilter","useRef","e","preventDefault","current","target","selectId","Number","closest","attributes","map","filtersChange","clearAll","useEffect","console","log","data-filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.53323b8f.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst FormStyle = styled.form`\n  margin: 10px auto;\n`;\n\nexport default function Form({ handlers, inputsContent }) {\n  return (\n    <FormStyle onSubmit={handlers.addTodo}>\n      <input type=\"text\" name=\"todo\" onChange={handlers.inputChange} value={inputsContent} />\n      <button>Add</button>\n    </FormStyle>\n  );\n}\n","import { useContext } from 'react';\nimport styled, { css } from 'styled-components';\n\nconst TodoCard = styled.div`\n  \n  max-width: 500px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  & .todo__card__content {\n    text-decoration: ${(props) => (props.isCompleted ? 'line-through' : 'none')};\n  }\n`;\n\nconst Button = styled.button`\n  margin: 5px 3px;\n`;\n\nfunction Todos({ StyleContext, todo, handlers }) {\n  return (\n    <TodoCard className=\"todo__card\" data-id={todo.id} isCompleted={todo.isCompleted}>\n      {todo.isEditing && <textarea onChange={handlers.editInputChange} defaultValue={todo.content}></textarea>}\n      {todo.isEditing && <div className=\"todo__card__controls\">\n        <Button className=\"todo__card__controls__cancelBtn\" onClick={handlers.cancelEditing}>Cancel</Button>\n        <Button className=\"todo__card__controls__changeBtn\" onClick={handlers.changeTodo}>Change</Button>\n      </div>}\n      {!todo.isEditing && <div className=\"todo__card__content\">{todo.content}</div>}\n      {!todo.isEditing\n        && (<div className=\"todo__card__controls\">\n          <Button className=\"todo__card__controls__statusBtn\" onClick={handlers.changeStatus}>\n            {(!todo.isCompleted && 'Done') || (todo.isCompleted && 'Undone')}\n          </Button>\n          <Button className=\"todo__card__contorls__editBtn\" onClick={handlers.editBtnClick}>\n            Edit\n          </Button>\n          <Button className=\"todo__card__controls__deleteBtn\" onClick={handlers.deleteTodo}>\n            Delete\n          </Button>\n        </div>)}\n    </TodoCard>\n  );\n}\n\nexport { Todos, Button };\n","import './App.css';\nimport styled from 'styled-components';\nimport { useState, useEffect, useRef } from 'react';\nimport Form from './components/Form';\nimport { Todos, Button } from './components/Todos';\n\nconst AppWrapper = styled.div`\n  max-width: 1920px;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-item: center;\n`;\n\nconst TodosWrapper = styled.div`\n  width: 500px;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n`;\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [inputs, setInputs] = useState({ content: '', editingContent: '' });\n  const [filter, setFilter] = useState('all');\n\n  const id = useRef(1);\n\n  const handlers = {\n    addTodo: (e) => {\n      e.preventDefault();\n      if (!inputs.content) return;\n      setTodos(\n        [...todos, {\n          id: id.current,\n          content: inputs.content,\n          isCompleted: false,\n          isEditing: false,\n        }],\n      );\n      setInputs(\n        {\n          content: '',\n        },\n      );\n      id.current++;\n    },\n\n    inputChange: (e) => {\n      setInputs(\n        { ...inputs, content: e.target.value },\n      );\n    },\n\n    changeStatus: (e) => {\n      const selectId = Number(e.target.closest('.todo__card').attributes['data-id'].value);\n      setTodos(\n        todos.map((todo) => (todo.id !== selectId ? todo : {\n          ...todo,\n          isCompleted: !todo.isCompleted,\n        })),\n      );\n    },\n\n    deleteTodo: (e) => {\n      const selectId = Number(e.target.closest('.todo__card').attributes['data-id'].value);\n      setTodos(\n        todos.filter((todo) => todo.id !== selectId),\n      );\n    },\n\n    editBtnClick: (e) => {\n      const selectId = Number(e.target.closest('.todo__card').attributes['data-id'].value);\n      setTodos(\n        todos.map((todo) => (todo.id !== selectId\n          ? { ...todo, isEditing: false }\n          : { ...todo, isEditing: true }\n        )),\n      );\n      setInputs(\n        { ...inputs, editingContent: e.target.value }\n      )\n    },\n\n    editInputChange: e => {\n      setInputs(\n        { ...inputs, editingContent: e.target.value }\n      )\n    },\n\n    changeTodo: e =>{\n      if (!inputs.editingContent) return;\n      const selectId = Number(e.target.closest('.todo__card').attributes['data-id'].value);\n      setTodos(\n        todos.map((todo) => (todo.id !== selectId ? todo : {\n          ...todo,\n          content: inputs.editingContent,\n          isEditing: false\n        })),\n      );\n      setInputs(\n        {...inputs, editingContent: ''}\n      )\n    },\n\n    cancelEditing: e => {\n      const selectId = Number(e.target.closest('.todo__card').attributes['data-id'].value);\n      setTodos(\n        todos.map((todo) => (todo.id !== selectId ? todo : {\n          ...todo,\n          isEditing: false\n        })),\n      );\n      setInputs(\n        {...inputs, editingContent: ''}\n      )\n    },\n\n    filtersChange: (e) => {\n      const { value } = e.target.attributes['data-filter'];\n      setFilter(\n        value === 'all' ? 'all' : value === 'true',\n      );\n    },\n\n    clearAll: () => {\n      setTodos([]);\n    },\n  };\n\n  useEffect(() => {\n    console.log(inputs)\n  }, [inputs]);\n\n  return (\n    <AppWrapper className=\"App\">\n      <Form handlers={handlers} inputsContent={inputs.content} />\n      <div className=\"filters\">\n        <Button className=\"filters__allBtn\" data-filter=\"all\" onClick={handlers.filtersChange}>All</Button>\n        <Button className=\"filters__completedBtn\" data-filter onClick={handlers.filtersChange}>Completed</Button>\n        <Button className=\"filters__uncompletedBtn\" data-filter={false} onClick={handlers.filtersChange}>Uncompleted</Button>\n      </div>\n      <TodosWrapper className=\"todos\">\n        <div className=\"todos__header\">\n          <span className=\"todos__header__title\">My Todos</span>\n          <Button className=\"todos__header__clearAllBtn\" onClick={handlers.clearAll}>Clear All Todos</Button>\n        </div>\n        {\n          todos\n            .filter((todo) => (filter === 'all'\n              ? true\n              : filter\n                ? todo.isCompleted : !todo.isCompleted))\n            .map((todo) => <Todos todo={todo} key={todo.id} handlers={handlers} />)\n        }\n      </TodosWrapper>\n    </AppWrapper>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}